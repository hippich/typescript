=== tests/cases/compiler/parserModule1.ts ===
    export module CompilerDiagnostics {
>CompilerDiagnostics : CompilerDiagnostics

        export var debug = false;
>debug : boolean

        export interface IDiagnosticWriter {
>IDiagnosticWriter : IDiagnosticWriter

            Alert(output: string): void;
>Alert : (output: string) => void
>output : string
        }

        export var diagnosticWriter: IDiagnosticWriter = null;
>diagnosticWriter : IDiagnosticWriter
>IDiagnosticWriter : IDiagnosticWriter

        export var analysisPass: number = 0;
>analysisPass : number

        export function Alert(output: string) {
>Alert : typeof Alert
>output : string

            if (diagnosticWriter) {
>diagnosticWriter : IDiagnosticWriter

                diagnosticWriter.Alert(output);
>diagnosticWriter.Alert(output) : void
>diagnosticWriter.Alert : (output: string) => void
>diagnosticWriter : IDiagnosticWriter
>Alert : (output: string) => void
>output : string
            }
        }

        export function debugPrint(s: string) {
>debugPrint : typeof debugPrint
>s : string

            if (debug) {
>debug : boolean

                Alert(s);
>Alert(s) : void
>Alert : typeof Alert
>s : string
            }
        }

        export function assert(condition: boolean, s: string) {
>assert : typeof assert
>condition : boolean
>s : string

            if (debug) {
>debug : boolean

                if (!condition) {
>!condition : boolean
>condition : boolean

                    Alert(s);
>Alert(s) : void
>Alert : typeof Alert
>s : string
                }
            }
        }

    }
